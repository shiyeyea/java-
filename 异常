 异常：

要理解Java异常处理是如何工作的，你需要掌握以下三种类型的异常:
   检查性异常:   最具代表的检查性异常是用户错误或问题引起的异常，这是程序员无法预见的.
                例如要打开一个不存在文件时，一个异常就发生了，这些异常在编译时不能被简单地忽略。
  运行时异常:    运行时异常是可能被程序员避免的异常。与检查性异常相反，运行时异常可以在编译时被忽略。
  错误:         错误不是异常，而是脱离程序员控制的问题。错误在代码中通常被忽略。例如，当栈溢出时，一个错误就发生了，它们在编译也检查不到的。


Error和Exception的区别: 
               Error通常是灾难性的致命的错误，是程序无法控制和处理的，当出现这些异常时，Java虚拟机(JVM)一般会选择终止线程;
               Exception通常情况下是可以被程序处理的，并且在程序中应该尽可能的去处理这些异常

在Exception分支中有一个重要的子类
   RuntimeException(运行时异常)
   ArrayIndexOutOfBoundsException (数组下标越界)
   NullPointerException (空指针异常)
   ArithmeticException (算术异常)
   MissingResourceException (丢失资源)
   ClassNotFoundException (找不到类)


int a=1;
        int b=0;

        
            try {//try监控区域
                System.out.println(a/b);
            }catch (ArithmeticException e){//catch （想要捕获的异常类型）捕捉异常
                System.out.println("程序出现异常，变量b不能为0");
            }finally {//处理善后工作
                System.out.println("finally");
            }
        

        }
        //finally 可以不要  假设IO，资源，关闭！
快捷键
    public static void main(String[] args) {
        int a=1;
        int b=0;
        //ctrl+alt+t(选中)
        try {
            System.out.println(a/b);
        } catch (Exception e) {
            throw new RuntimeException(e);//打印错误的栈信息
        } finally {
        }

    }
