多态注意事项:
  1.多态是方法的多态，属性没有多
  2父类和子类，有联系 。    类型转换异常（CLassCastException） 
  3.存在条件: 继承关系，方法需要重写，父类引用指向子类对象!Father fi = new Son();
不能重写的情况：
  1.static 方法，属于类，它不属于实例
  2，final 常量:
  3.private方法
  
  
  
  
public static void main(String[] args) {
        //一个对象的实际类型是确定的
        // new Student();
        // new Person();

        //可以指向的引用类型就不确定了:父类的引用指向子类

        //study 能调用的方法都是自己的或者继承父类的!
        study sb=new study();
        //studybaba 父类型，可以指向子类，但是不能调用子类独有的方认
        studybaba nb=new study();
        //子类重写了父类的方法，执行子类的方法
        object nn=new study();

    }
